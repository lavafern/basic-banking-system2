openapi: 3.0.3
info:
  title: Basic banking system
  description: |-
    chapter 5 challenge
  contact:
    email: rian.rafli@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1


tags:
  - name: User
    description: Operations related to users
  - name: Bank account
    description: Operations related to bank accounts
  - name: Transaction
    description: Operations related to transactions

paths:
  /users:
    post:
      tags:
        - User
      operationId: post-create-new-user
      summary: Create a new user
      description: Creates a new user with the provided information.
      requestBody:
        $ref: "#/components/requestBodies/CreateUser"
      responses:
        "201":
          description: Successful user creation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/UserModel"
    get:
      tags:
        - User
      operationId: get-fetch-all-user
      summary: Get all users
      description: Retrieves a list of all registered users.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items : 
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                              format: email
                            password:
                              type: string
                            profile:
                              type: object
                              properties:
                                identity_type: 
                                  type: string
                                identity_number: 
                                  type: string
                                address:
                                 type: string

  "/users/{userId}":
    get:
      tags:
        - User
      operationId: get-fetch-user-detail
      summary: Get user details
      description: Retrieves details of a specific user.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the user to retrieve.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                       type: object
                       properties:
                         id:
                           type: integer
                         name:
                           type: string
                         email:
                           type: string
                           format: email
                         password:
                           type: string
    put:
      tags:
        - User
      operationId: put-update-user
      summary: Update user details
      description: Updates details of a specific user.
      requestBody:
        description: A JSON object containing pet information
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the user to update.
      responses:
        "200":
          description: Successful user update
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                       type: object
                       properties:
                         id:
                           type: integer
                         name:
                           type: string
                         email:
                           type: string
                           format: email
                         password:
                           type: string
    delete:
      tags:
        - User
      operationId: delete-remove-user
      summary: Delete user
      description: Deletes a specific user.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the user to delete.
      responses:
        "200":
          description: Successful user deletion
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                       type: object
                       properties:
                         id:
                           type: integer
                         name:
                           type: string
                         email:
                           type: string
                           format: email
                         password:
                           type: string
  /auth/register:
    post:
      tags:
        - User
      operationId: post-create-new-user
      summary: Create a new user
      description: Creates a new user with the provided information.
      requestBody:
        $ref: "#/components/requestBodies/CreateUser"
      responses:
        "201":
          description: Successful user creation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/UserModel"
  /auth/login:
    post:
      tags:
        - User
      operationId: get-fetch-all-user
      summary: login user (get acces token)
      description: login user.
      requestBody:
        description: A JSON object containing pet information
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              email:
                                type: string
                              password:
                                type: string
                          accesToken:
                            type: string
  /auth/authenticate:
    get:
      tags:
        - User
      operationId: get-fetch-all-user
      summary: login user (get acces token)
      description: login user.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              email:
                                type: string
                              password:
                                type: string
                          accesToken:
                            type: string





  /accounts:
    post:
      tags:
        - Bank account
      operationId: post-create-post
      summary: Create a new bank account
      description: Creates a new post with the provided information.
      requestBody:
        description: A JSON object containing pet information
        content:
          application/json:
            schema:
              type: object
              properties:
                bankName:
                  type: string
                balance:
                  type: integer
                userId:
                  type: integer
      
      responses:
        "201":
          description: Successful bank acount creation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                         id:
                           type: integer
                         bankName:
                           type: string
                         bank_account_number:
                           type: string
                         balance:
                           type: integer
                         user_id:
                           type: integer

    get:
      tags:
        - Bank account
      operationId: get-fetch-all-post
      summary: Get all bank accounts
      description: Retrieves a list of all bank accounts.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items : 
                          type: object
                          properties:
                            id:
                              type: integer
                            bank_name:
                              type: string
                            bank_account_number:
                              type: string
                            balance:
                              type: integer
                            user_id:
                              type: integer
                            
                  
                  
  "/accounts/{accountId}":
    get:
      tags:
        - Bank account
      operationId: get-fetch-post-detail
      summary: Get account details
      description: Retrieves details of a specific account.
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: The ID of the post to retrieve.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                          bank_name:
                            type: string
                          bank_account_number:
                            type: string
                          balance:
                            type: integer
                          user_id:
                            type: integer

    put:
      tags:
        - Bank account
      operationId: put-update-user
      summary: Update user details
      description: Updates details of a specific user.
      requestBody:
        description: A JSON object containing pet information
        content:
          application/json:
            schema:
              type: object
              properties:
                bankName:
                  type: string
      
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: The ID of the user to update.
      responses:
        "200":
          description: Successful user update
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                          bank_name:
                            type: string
                          bank_account_number:
                            type: string
                          balance:
                            type: integer
                          user_id:
                            type: integer
    delete:
      tags:
        - Bank account
      operationId: delete-remove-user
      summary: Delete account
      description: Deletes a specific account.
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: The ID of the user to delete.
      responses:
        "200":
          description: Successful user deletion
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                          bank_name:
                            type: string
                          bank_account_number:
                            type: string
                          balance:
                            type: integer
                          user_id:
                            type: integer
                  

  /transactions:
    post:
      tags:
        - Transaction
      operationId: post-create-post
      summary: Create a new bank account
      description: Creates a new post with the provided information.
      requestBody:
        description: A JSON object containing pet information
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceId:
                  type: integer
                destinatonId:
                  type: integer
                amount:
                  type: integer
      
      responses:
        "201":
          description: Successful transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                     data:
                      type: object
                      properties: 
                        sender:
                          type: object
                          properties:
                            id:
                              type: integer
                            bank_name:
                              type: string
                            bank_account_number:
                              type: string
                            balance:
                              type: integer
                            user_id:
                              type: integer
                        receiver:
                          type: object
                          properties:
                            id:
                              type: integer
                            bank_name:
                              type: string
                            bank_account_number:
                              type: string
                            balance:
                              type: integer
                            user_id:
                              type: integer
                        transaction:
                          type: object
                          properties:
                            id:
                              type: integer
                            amount:
                              type: integer
                            identity_number:
                              type: integer
                            source_account_id:
                              type: integer
                            destination_account_id:
                              type: integer
    get:
      tags:
        - Transaction
      operationId: get-fetch-all-post
      summary: Get all bank transaction
      description: Retrieves a list of all bank transaction.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items : 
                          type: object
                          properties:
                            id:
                              type: integer
                            amount:
                              type: integer
                            source_account_id:
                              type: integer
                            destination_account_id:
                              type: integer

  "/transactions/{transactionId}":
    get:
      tags:
        - Transaction
      operationId: get-fetch-post-detail
      summary: Get transaction details
      description: Retrieves details of a specific transaction.
      parameters:
        - in: path
          name: transactionId
          schema:
            type: integer
          required: true
          description: The ID of the post to retrieve.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                          amount:
                            type: integer
                          source_account_id:
                            type: integer
                          destination_account_id:
                            type: integer
                          source_account_name:
                            type: string
                          destination_account_name:
                            type: string
                            
    
  "/withdraw":
    put:
      tags:
        - Transaction
      operationId: get-fetch-post-detail
      summary: Get withdraw details
      description: Retrieves details of a specific withdraw.
      requestBody:
        description: A JSON object containing withdraw information
        content:
          application/json:
            schema:
              type: object
              properties:
                bankId:
                  type: integer
                amount:
                  type: integer
      
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                          bank_name:
                            type: string
                          bank_account_number:
                            type: string
                          balance:
                            type: integer
                          user_id:
                            type: integer
  
  "/deposit":
    put:
      tags:
        - Transaction
      operationId: get-fetch-post-detail
      summary: Get withdraw details
      description: Retrieves details of a specific withdraw.
      requestBody:
        description: A JSON object containing withdraw information
        content:
          application/json:
            schema:
              type: object
              properties:
                bankId:
                  type: integer
                amount:
                  type: integer
      
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                          bank_name:
                            type: string
                          bank_account_number:
                            type: string
                          balance:
                            type: integer
                          user_id:
                            type: integer
  






components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BasicResponse:
      title: BasicResponse
      type: object
      properties:
        status:
          type: string
          example: "success"
        message:
          type: string
          example: "succesfully do task"
    UserModel:
      title: User
      type: object
      properties:
        newUser:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
              format: email
        profile:
          type: object
          properties:
            id:
              type: integer
            identity_type:
              type: string
            identity_number:
              type: string
            address:
              type: string
            user_id:
              type: integer

    
  requestBodies:
    CreateUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "rian"
              email:
                type: string
                example: "rian@mail.com"
              password:
                type: string
                example: "password123"
              identity_type:
                type: string
                example: "passport"
              identity_number:
                type: string
                example: "389287482"
              address :
                type: string
                example: "Jakarta"  
    CreatePost:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                example: "Software Development Life Cycle"
              categories:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Programming"
              authorId:
                type: integer
                example: 1